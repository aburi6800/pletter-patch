diff --git a/./org/unpack.asm b/./unpack.asm
index 7b267e8..5c17d5f 100644
--- a/./org/unpack.asm
+++ b/./unpack.asm
@@ -1,4 +1,6 @@
 ; pletter v0.5c msx unpacker
+; Original source : Copyright (c) 2002-2003 Team Bomba
+; z88dk patch     : Copyright (C) 2025 aburi6800 (Hitoshi Iwai)
 
 ; call unpack with hl pointing to some pletter5 data, and de pointing to the destination.
 ; changes all registers
@@ -7,19 +9,32 @@
 
 ;  define LENGTHINDATA
 
-  module pletter
+;  module pletter
+PUBLIC _unpack
 
-  macro GETBIT
+;  macro GETBIT
+MACRO GETBIT
   add a,a
   call z,getbit
-  endmacro
+;  endmacro
+ENDM
 
-  macro GETBITEXX
+;  macro GETBITEXX
+MACRO GETBITEXX
   add a,a
   call z,getbitexx
-  endmacro
+;  endmacro
+ENDM
+
+_unpack:
+
+  ; Get call parameters from z88dk C.
+  ; Not necessary when calling from asm.
+  pop bc
+  pop de
+  pop hl
+  push bc
 
-@unpack
 
   ifdef LENGTHINDATA
   inc hl
@@ -48,29 +63,29 @@
   ld e,1
   exx
   ld iy,loop
-literal
+literal:
   ldi
-loop
+loop:
   GETBIT
   jr nc,literal
   exx
   ld h,d
   ld l,e
-getlen
+getlen:
   GETBITEXX
-  jr nc,.lenok
-.lus
+  jr nc,lenok
+lus:
   GETBITEXX
   adc hl,hl
   ret c
   GETBITEXX
-  jr nc,.lenok
+  jr nc,lenok
   GETBITEXX
   adc hl,hl
   ret c
   GETBITEXX
-  jp c,.lus
-.lenok
+  jp c,lus
+lenok:
   inc hl
   exx
   ld c,(hl)
@@ -78,21 +93,21 @@ getlen
   ld b,0
   bit 7,c
   jp z,offsok
-  jp ix
+  jp (ix)
 
-mode6
+mode6:
   GETBIT
   rl b
-mode5
+mode5:
   GETBIT
   rl b
-mode4
+mode4:
   GETBIT
   rl b
-mode3
+mode3:
   GETBIT
   rl b
-mode2
+mode2:
   GETBIT
   rl b
   GETBIT
@@ -100,7 +115,7 @@ mode2
   or a
   inc b
   res 7,c
-offsok
+offsok:
   inc bc
   push hl
   exx
@@ -112,15 +127,15 @@ offsok
   pop bc
   ldir
   pop hl
-  jp iy
+  jp (iy)
 
-getbit
+getbit:
   ld a,(hl)
   inc hl
   rla
   ret
 
-getbitexx
+getbitexx:
   exx
   ld a,(hl)
   inc hl
@@ -128,14 +143,14 @@ getbitexx
   rla
   ret
 
-modes
-  word offsok
-  word mode2
-  word mode3
-  word mode4
-  word mode5
-  word mode6
+modes:
+  defw offsok
+  defw mode2
+  defw mode3
+  defw mode4
+  defw mode5
+  defw mode6
 
-  endmodule
+;  endmodule
 
 ;eof
\ No newline at end of file
